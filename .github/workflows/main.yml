on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
#env:
 # AZURE_CONTAINER_REGISTRY: "azurecontainerkrss"
 # CONTAINER_NAME: "springboot-appe"
 # RESOURCE_GROUP: "azure-terraform-rg"
 # CLUSTER_NAME: "azureakskrss"
 #  DEPLOYMENT_MANIFEST_PATH: "aks-deploy-from-acr.yaml"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v3
    
    - name: Log in with Azure
      uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
    - name: set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: latest
       # cli_config_credentials_token: ${{ secrets.AZURE_CREDENTIALS1 }}
    - run: terraform init
    - name: Terraform Validate
      id: validate
      run: terraform validate
    - name: Terraform Plan
      id: tf-plan
      run: |
        export exitcode=0
        terraform plan -detailed-exitcode -no-color -out tfplan || export exitcode=$?
        echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
        
        if [ $exitcode -eq 1 ]; then
          echo Terraform Plan Failed!
          exit 1
        else 
          exit 0
        fi
    - name: Publish Terraform Plan
      uses: actions/upload-artifact@v3
      with:
        name: tfplan
        path: tfplan
    - name: Download Terraform Plan
      uses: actions/download-artifact@v3
      with:
        name: tfplan
    # Terraform Apply
    - name: Terraform Apply
      run: terraform apply -auto-approve tfplan
      env: 
        TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
        TF_VAR_azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        TF_VAR_azure_subscription_id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        TF_VAR_azure_tenant_id: ${{ secrets.AZURE_TENANT_ID }}
        
